apply plugin: 'com.android.application'

android {
    namespace "com.kjsystems.pipelines_android"

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.example.android.architecture.blueprints.todomvp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            minifyEnabled true
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            // useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            // useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "version"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "version"
        }
        prod {
            dimension "version"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // App's dependencies, including test
    implementation "androidx.appcompat:appcompat:$rootProject.androidxVersion"
    implementation "androidx.cardview:cardview:1.0.0" // Fixed version
    implementation "com.google.android.material:material:$rootProject.androidxVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.androidxVersion"
    // Removed legacy-support-v4 for clarity. If you absolutely need it, check the appropriate AndroidX library.
    implementation "androidx.test.espresso.idling:idling-concurrent:3.3.0" // Fixed version
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "androidx.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.ext.runnerVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing
    // androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    // androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    // androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$rootProject.androidxVersion"
    androidTestImplementation "androidx.recyclerview:recyclerview:$rootProject.androidxVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$rootProject.androidxVersion"
    androidTestImplementation "com.google.android.material:material:$rootProject.androidxVersion"
}
